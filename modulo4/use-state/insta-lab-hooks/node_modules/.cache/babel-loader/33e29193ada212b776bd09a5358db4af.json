{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beatr\\\\labenu\\\\hooks-Beatriz-Santos\\\\modulo4\\\\use-state\\\\insta-lab-hooks\\\\src\\\\components\\\\Post\\\\Post.js\";\nimport React, { useState } from 'react';\nimport { PostContainer, PostHeader, UserPhoto, PostPhoto, PostFooter, CommentContainer } from './styles';\nimport IconeComContador from '../IconeComContador/IconeComContador';\nimport SecaoComentario from '../SecaoComentario/SecaoComentario';\nimport iconeCoracaoBranco from \"../../img/favorite-white.svg\";\nimport iconeCoracaoPreto from \"../../img/favorite.svg\";\nimport iconeComentario from \"../../img/comment_icon.svg\";\nconst caixaDeComentario = comentado ? React.createElement(SecaoComentario, {\n  enviarComentario: enviarComentario,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}) : comentarios.map(comentario => {\n  return React.createElement(CommentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, comentario));\n});\n\nconst Post = props => {\n  const [curtido, setCurtida] = useState(false);\n  const [numeroCurtidas, setNumeroCurtidas] = useState(0);\n  const [icone, setIcone] = useState(iconeCoracaoBranco);\n  const [comentado, setComentado] = useState(false);\n  const [numeroComentarios, setNumeroComentarios] = useState(0);\n  const [comentarios, setComentarios] = useState([]);\n\n  const onClickCurtida = () => {\n    if (curtido) {\n      setIcone(iconeCoracaoBranco);\n      setCurtida(!curtido);\n      setNumeroCurtidas(numeroCurtidas - 1);\n    } else {\n      setIcone(iconeCoracaoPreto);\n      setCurtida(!curtido);\n      setNumeroCurtidas(numeroCurtidas + 1);\n    }\n  };\n\n  const onClickComentario = () => {\n    setComentado(!comentado);\n  };\n\n  const enviarComentario = comentario => {\n    const listaDeComentarios = [comentarios, comentario];\n    setComentarios(listaDeComentarios);\n    setComentado(false);\n    setNumeroComentarios(numeroComentarios + 1);\n  };\n\n  return React.createElement(PostContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(PostHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(UserPhoto, {\n    src: props.fotoUsuario,\n    alt: 'Imagem do usuario',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.nomeUsuario)), React.createElement(PostPhoto, {\n    src: props.fotoPost,\n    alt: 'Imagem do post',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(PostFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(IconeComContador, {\n    icone: icone,\n    onClickIcone: onClickCurtida // valorContador={numeroCurtidas}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(IconeComContador, {\n    icone: iconeComentario,\n    onClickIcone: onClickComentario // valorContador={numeroComentarios}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), caixaDeComentario);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/beatr/labenu/hooks-Beatriz-Santos/modulo4/use-state/insta-lab-hooks/src/components/Post/Post.js"],"names":["React","useState","PostContainer","PostHeader","UserPhoto","PostPhoto","PostFooter","CommentContainer","IconeComContador","SecaoComentario","caixaDeComentario","comentado","enviarComentario","comentarios","map","comentario","Post","props","curtido","setCurtida","numeroCurtidas","setNumeroCurtidas","icone","setIcone","iconeCoracaoBranco","setComentado","numeroComentarios","setNumeroComentarios","setComentarios","onClickCurtida","iconeCoracaoPreto","onClickComentario","listaDeComentarios","fotoUsuario","nomeUsuario","fotoPost","iconeComentario"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { PostContainer, PostHeader, UserPhoto, PostPhoto, PostFooter, CommentContainer } from './styles'\n\nimport IconeComContador from '../IconeComContador/IconeComContador'\nimport SecaoComentario from '../SecaoComentario/SecaoComentario'\n\nimport iconeCoracaoBranco from '../../img/favorite-white.svg'\nimport iconeCoracaoPreto from '../../img/favorite.svg'\nimport iconeComentario from '../../img/comment_icon.svg'\n\n\nconst caixaDeComentario = comentado ?( \n  <SecaoComentario enviarComentario={enviarComentario} />):(\n    comentarios.map((comentario) => {\n      return(\n        <CommentContainer>\n          <p>{comentario}</p>\n        </CommentContainer>\n      )\n    })\n  )\n  \nconst Post = (props) => {\n  const [curtido, setCurtida] = useState(false);\n  const [numeroCurtidas, setNumeroCurtidas] = useState(0);\n  const [icone, setIcone] = useState(iconeCoracaoBranco)\n  const [comentado, setComentado] = useState(false);\n  const [numeroComentarios, setNumeroComentarios] = useState(0);\n  const [comentarios, setComentarios] = useState([]);\n\n  const onClickCurtida = () => {\n    if(curtido){\n      setIcone(iconeCoracaoBranco);\n      setCurtida(!curtido);\n      setNumeroCurtidas(numeroCurtidas - 1);\n    }\n    else{\n      setIcone(iconeCoracaoPreto);\n      setCurtida(!curtido);\n      setNumeroCurtidas(numeroCurtidas + 1);\n    }\n  };\n\n  const onClickComentario = () => {\n    setComentado(!comentado)\n  };\n\n  const enviarComentario = (comentario) => {\n    const listaDeComentarios = [comentarios, comentario]\n\n    setComentarios(listaDeComentarios);\n    setComentado(false)\n    setNumeroComentarios(numeroComentarios + 1)\n  }\n\n  return (\n    <PostContainer>\n      <PostHeader>\n        <UserPhoto src={props.fotoUsuario} alt={'Imagem do usuario'}/>\n        <p>{props.nomeUsuario}</p>\n      </PostHeader>\n\n      <PostPhoto src={props.fotoPost} alt={'Imagem do post'}/>\n\n      <PostFooter>\n        <IconeComContador\n          icone={icone}\n          onClickIcone={onClickCurtida}\n          // valorContador={numeroCurtidas}\n        />\n\n        <IconeComContador\n          icone={iconeComentario}\n          onClickIcone={onClickComentario}\n          // valorContador={numeroComentarios}\n        />\n      </PostFooter>\n      {caixaDeComentario}\n    </PostContainer>\n  )\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}